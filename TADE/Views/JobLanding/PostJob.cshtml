@using CaptchaMvc.HtmlHelpers
@using TADE;
@using CaptchaMvc;
@model TADE.Models.JobDetail


@{
    ViewBag.Title = "RecruiterRegister";
    Layout = "~/Views/Shared/_Layout.cshtml";
    
}
<style>
    #progressbar li {
        width: 50%;
    }
</style>
<h2>Post Your Job</h2>
<link rel="stylesheet" href="http://code.jquery.com/ui/1.11.0/themes/smoothness/jquery-ui.css">
<script src="http://code.jquery.com/jquery-1.10.2.js"></script>
<script src="http://code.jquery.com/ui/1.11.0/jquery-ui.js"></script>
<script>
$(function () {
$("#txtdatepicker").datepicker();
});
</script>
<script src="~/Scripts/jquery-1.7.1.min.js"></script>
<script type="text/javascript">
    function checkFilesCount(id) {
        if (id.files.length > 5) {
            alert('you cant upload files more than 5');
            document.getElementById("files").value = "";
        }
    }
   function show(input) {
      if (input.files && input.files[0]) {
      var filerdr = new FileReader();
      filerdr.onload = function (e) {
         $('#user_img').attr('src', e.target.result);
      }
      filerdr.readAsDataURL(input.files[0]);
   }
}
</script>
@using (Html.BeginForm("PostJob", "JobLanding", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div id="tadeform" class="form-horizontal">
        <h4>
            Job Post Form:
        </h4>
        <hr />
        <!-- progressbar -->
        <ul id="progressbar">
            <li class="active">Job Details</li>
            <li>Final step</li>
        </ul>

        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <label style="font-weight: normal;">(*  Mandatory)</label>
      
        <fieldset>
            <h2 class="fs-title">Describe about Job</h2>
            <h3 class="fs-subtitle"></h3>
            <div class="form-group">
                @Html.LabelFor(model => model.JobTile, "Job Title *", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-7">
                    @Html.EditorFor(model => model.JobTile, new { htmlAttributes = new { @class = "TADEform-control" } })

                    <img src="~/Images/QuestionIcon.png" data-toggle="tooltip" title="Please enter job title." />
                    <div class="text-danger">@Html.ValidationMessageFor(model => model.JobTile)</div>


                </div>
            </div>
            
            <div class="form-group">
                @Html.LabelFor(model => model.Location, "Location *", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-7">
                    @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "TADEform-control" } })

                    <img src="~/Images/QuestionIcon.png" data-toggle="tooltip" title="Please enter location of job." />
                    <div class="text-danger">@Html.ValidationMessageFor(model => model.Location)</div>


                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Fees, "Fees *", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-7">
                    @Html.EditorFor(model => model.Fees, new { htmlAttributes = new { @class = "TADEform-control" } })
                    <img src="~/Images/QuestionIcon.png" data-toggle="tooltip" title="Please enter fees." />
                    <div class="text-danger">@Html.ValidationMessageFor(model => model.Fees)</div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.JobDescription, "Job Description", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-7">
                    @Html.EditorFor(model => model.JobDescription, new { htmlAttributes = new { @class = "TADEform-control" } })
                    <img src="~/Images/QuestionIcon.png" data-toggle="tooltip" title="Please enter job description." />
                    <div class="text-danger">@Html.ValidationMessageFor(model => model.JobDescription)</div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ContactPerson, "Contact Person*", htmlAttributes: new { @style = "padding-right: 0px;", @class = "control-label col-md-2" })
                <div class="col-md-7">
                    @Html.EditorFor(model => model.ContactPerson, new { htmlAttributes = new { @class = "TADEform-control" } })
                    <img src="~/Images/QuestionIcon.png" data-toggle="tooltip" title="Please enter contact person name." />
                    <div class="text-danger">@Html.ValidationMessageFor(model => model.ContactPerson)</div>


                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.ContactNumber, "Contact Number *", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-7">
                    @Html.EditorFor(model => model.ContactNumber, new { htmlAttributes = new { @class = "TADEform-control" } })

                    <img src="~/Images/QuestionIcon.png" data-toggle="tooltip" title="Please enter contact number of contact person." />
                    <div class="text-danger">@Html.ValidationMessageFor(model => model.ContactNumber)</div>

                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.Email, "Email *", htmlAttributes: new { @class = "control-label col-md-2", title = "Test tool tip" })
                <div class="col-md-7">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "TADEform-control" } })

                    <img src="~/Images/QuestionIcon.png" data-toggle="tooltip" title="Please enter email id of contact person." />
                    <div class="text-danger">@Html.ValidationMessageFor(model => model.Email)</div>

                </div>

            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.NatureOfWork, "Nature of work *", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-7">
                    @Html.EditorFor(model => model.NatureOfWork, new { htmlAttributes = new { @class = "TADEform-control" } })

                    <img src="~/Images/QuestionIcon.png" data-toggle="tooltip" title="Please enter nature/type of work." />
                    <div class="text-danger">@Html.ValidationMessageFor(model => model.NatureOfWork)</div>

                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.ExpectedDuration, "Expected Duration *", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-7">
                    @Html.EditorFor(model => model.ExpectedDuration, new { htmlAttributes = new { @class = "TADEform-control" } })

                    <img src="~/Images/QuestionIcon.png" data-toggle="tooltip" title="Please enter expected duarion of work." />
                    <div class="text-danger">@Html.ValidationMessageFor(model => model.ExpectedDuration)</div>

                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.LastDateToApply, "Last date to apply *", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-7">
                    @*@Html.TextBoxFor(model => model.LastDateToApply, new { htmlAttributes = new { @class = "TADEform-control datepicker" } })*@
                    Date: @Html.TextBoxFor(m => m.LastDateToApply, new { @id = "txtdatepicker", @style = "width:150px;" })
                    <img src="~/Images/QuestionIcon.png" data-toggle="tooltip" title="Please enter last date to apply for this job." />
                    <div class="text-danger">@Html.ValidationMessageFor(model => model.LastDateToApply)</div>


                </div>
            </div>
            <div class="form-group">
                @Html.LabelFor(model => model.files,"Attachments ", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <input type="file" title="Attach files" onchange="checkFilesCount(this)" multiple="multiple" name="@Html.NameFor(model => model.files)" id="files" accept="application/msword, application/vnd.ms-excel, text/plain, application/pdf, image/*" />
                    @Html.ValidationMessageFor(model => model.files, "", new { @class = "text-danger" })
                   
                    
                </div>
            </div>  
            @*<div class="form-group">
                @Html.LabelFor(model => model.JobDetailsAttachmentUrl, "Attachments", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-7">
                   
                    <input type="file" title="search image" name="@Html.NameFor(model => model.File)" id="@Html.IdFor(model => model.File)" />
                    <img src="~/Images/QuestionIcon.png" data-toggle="tooltip" title="Please attach any file to describe about job." />
                    <div class="text-danger">@Html.ValidationMessageFor(model => model.File)</div>

               
                </div>
            </div>*@
            <input type="button" name="previous" class="previous action-button" value="Previous" />
            <input type="button" name="next" class="next action-button" value="Next" />
        </fieldset>

        

        <fieldset>
            <h2 class="fs-title">Final step</h2>
            <h3 class="fs-subtitle"></h3>



            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">

                    @*@Html.MathCaptcha()*@

                    @Html.Captcha(4)
                    <br />
                    <p class="Error">  @ViewBag.ErrMessage </p>
                </div>
            </div>
            <input type="button" name="previous" class="previous action-button" value="Previous" />
            <input type="submit" value="Register" class="submit action-button" />
            @*<div class="form-group">
                    <div class="col-md-offset-2 col-md-10">

                    </div>
                </div>*@

            @*<input type="submit" name="submit" class="submit action-button" value="Submit" />*@
        </fieldset>

    </div>
}
<!-- jQuery -->
<script src="~/JS/jquery-1.9.1.min.js" type="text/javascript"></script>

<!-- jQuery easing plugin -->
<script src="~/JS/jquery.easing.min.js" type="text/javascript"></script>
@*<div>
        @Html.ActionLink("Back to List", "Index")
    </div>*@
<script>
    $('#datetimepicker1').datepicker();
</script>
<script>
$(document).ready(function(){
    $('[data-toggle="tooltip"]').tooltip();
    //jQuery time
    var current_fs, next_fs, previous_fs; //fieldsets
    var left, opacity, scale; //fieldset properties which we will animate
    var animating; //flag to prevent quick multi-click glitches
    
    $(".next").click(function () {
        if (animating) return false;
        animating = true;

        current_fs = $(this).parent();
        next_fs = $(this).parent().next();

        //activate next step on progressbar using the index of next_fs
        $("#progressbar li").eq($("fieldset").index(next_fs)).addClass("active");

        //show the next fieldset
        next_fs.show();
        //hide the current fieldset with style
        current_fs.animate({ opacity: 0 }, {
            step: function (now, mx) {
                //as the opacity of current_fs reduces to 0 - stored in "now"
                //1. scale current_fs down to 80%
                scale = 1 - (1 - now) * 0.2;
                //2. bring next_fs from the right(50%)
                left = (now * 50) + "%";
                //3. increase opacity of next_fs to 1 as it moves in
                opacity = 1 - now;
                current_fs.css({ 'transform': 'scale(' + scale + ')' });
                next_fs.css({ 'left': left, 'opacity': opacity });
            },
            duration: 800,
            complete: function () {
                current_fs.hide();
                animating = false;
            },
            //this comes from the custom easing plugin
            easing: 'easeInOutBack'
        });
    });

    $(".previous").click(function () {
        if (animating) return false;
        animating = true;

        current_fs = $(this).parent();
        previous_fs = $(this).parent().prev();

        //de-activate current step on progressbar
        $("#progressbar li").eq($("fieldset").index(current_fs)).removeClass("active");

        //show the previous fieldset
        previous_fs.show();
        //hide the current fieldset with style
        current_fs.animate({ opacity: 0 }, {
            step: function (now, mx) {
                //as the opacity of current_fs reduces to 0 - stored in "now"
                //1. scale previous_fs from 80% to 100%
                scale = 0.8 + (1 - now) * 0.2;
                //2. take current_fs to the right(50%) - from 0%
                left = ((1 - now) * 50) + "%";
                //3. increase opacity of previous_fs to 1 as it moves in
                opacity = 1 - now;
                current_fs.css({ 'left': left });
                previous_fs.css({ 'transform': 'scale(' + scale + ')', 'opacity': opacity });
            },
            duration: 800,
            complete: function () {
                current_fs.hide();
                animating = false;
            },
            //this comes from the custom easing plugin
            easing: 'easeInOutBack'
        });
    });

    //$(".submit").click(function () {
    //    return false;
    //})
});
</script>


